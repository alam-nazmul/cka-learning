# - name: Initialize Kubernetes cluster
#   command: kubeadm init --pod-network-cidr=10.244.0.0/16
#   when: "'k8s_masters' in group_names"

# - name: Set up kubeconfig for the root user
#   command: |
#     mkdir -p $HOME/.kube
#     cp /etc/kubernetes/admin.conf $HOME/.kube/config
#     chown $(id -u):$(id -g) $HOME/.kube/config
#   when: "'k8s_masters' in group_names"

# - name: Install Flannel CNI
#   command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel.yml
#   when: "'k8s_masters' in group_names"

# - name: Join worker nodes to the cluster
#   command: kubeadm join {{ hostvars[groups['k8s_masters'][0]].ansible_host }}:6443 --token {{ hostvars[groups['k8s_masters'][0]].kubeadm_token }} --discovery-token-ca-cert-hash sha256:{{ hostvars[groups['k8s_masters'][0]].kubeadm_ca_cert_hash }}
#   when: "'k8s_workers' in group_names"



- name: Check if kubeadm has already been initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubeadm_init_status
  ignore_errors: yes
  changed_when: false
  when: "'k8s_masters' in group_names"

- name: Run kubeadm init with pod network CIDR
  command: > 
    kubeadm init --pod-network-cidr={{ pod_network_cidr }}
  ignore_errors: yes
  register: kubeadm_init_result
  changed_when: kubeadm_init_result is changed
  when: 
    - "'k8s_masters' in group_names"
    - not kubeadm_init_status.stat.exists


- name: Save kubeadm init output to file
  copy:
    content: "{{ kubeadm_init_result.stdout | default('')}}"
    dest: /tmp/kubeadm-init-output.txt
    backup: yes
  when: 
    - kubeadm_init_result is defined
    - "'k8s_masters' in group_names"

- name: Update the bashrc file for to connect the cluster by kubectl commands
  lineinfile:
    path: /root/.bashrc
    line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'
    create: yes
  when: "'k8s_masters' in group_names"
  notify:
    - source bashrc file for kubectl


- name: Source bash_completion.sh in profile
  lineinfile:
    path: /etc/profile.d/bash_completion.sh
    create: yes
    line: "#!/bin/bash\n[ -f /usr/share/bash-completion/bash_completion ] && source /usr/share/bash-completion/bash_completion"
    state: present
  when: 
    - not ansible_check_mode
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('20.04', '>=')
    - ansible_distribution_version is version('22.04', '<=')
    - "'k8s_masters' in group_names"

- name: Add kubectl completion to user's bashrc
  lineinfile:
    path: /root/.bashrc
    line: 'source <(kubectl completion bash)'
    state: present
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('20.04', '>=')
    - ansible_distribution_version is version('22.04', '<=')
    - "'k8s_masters' in group_names"

- name: Immediately source the bashrc file for kubectl
  meta: flush_handlers
  when: "'k8s_masters' in group_names"

- name: Copy the network plugins manifest
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - src: ../files/setup_flannel.yaml
      dest: /tmp/setup_flannel.yaml
    - src: ../files/tigera-operator.yaml
      dest: /tmp/tigera-operator.yaml
    - src: ../files/calico-custom-resources.yaml
      dest: /tmp/calico-custom-resources.yaml
    - src: ../files/setup_metrics_server.yaml
      dest: /tmp/setup_metrics_server.yaml
  when:
    - "'k8s_masters' in group_names"
    - ansible_distribution == "Ubuntu"

- name: k8s apply the network plugins manifest
  kubernetes.core.k8s:
    src: "{{ item }}"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
  loop:
    - /tmp/setup_flannel.yaml
    - /tmp/tigera-operator.yaml
    - /tmp/calico-custom-resources.yaml
    - /tmp/setup_metrics_server.yaml
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('20.04', '>=')
    - ansible_distribution_version is version('22.04', '<=')
    - "'k8s_masters' in group_names"